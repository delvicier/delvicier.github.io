import{b as p,r as s,j as e}from"./index-agcFoake.js";import{S as d}from"./save-sXNYZzoG.js";/**
 * @license lucide-react v0.454.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const m=p("RefreshCcw",[["path",{d:"M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8",key:"14sxne"}],["path",{d:"M3 3v5h5",key:"1xhq8a"}],["path",{d:"M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16",key:"1hlbsb"}],["path",{d:"M16 16h5v5",key:"ccwih5"}]]),u={PromptLitCorrect:{name:"Literal correcto",temperatura:1,prompt:`En esta conversacion llamada "req.random();".
Usaremos unicamente este contexto "req.contexto()".
Genera un JSON valido que incluya "preguntas" y dentro agregale "req.numeroPreguntas();" "pregunta" y a cada "pregunta" agregale en desorden "req.numeroOpciones();" "opciones", de las "opciones" generadas agrega la correcta en "resCorrecta".`},PromptOption:{name:"Opciones múltiples",temperatura:1,prompt:`En esta conversacion llamada "req.random();".
Usaremos unicamente este contexto "req.contexto()".
Genera un JSON valido que incluya "preguntas" y dentro agregale "req.numeroPreguntas();" "pregunta" y a cada "pregunta" agregale en desorden "req.numeroOpciones();" "opciones", de las "opciones" generadas agrega la correcta en "resCorrecta".`},PromptTrueFalse:{name:"Verdadero o Falso",temperatura:1,prompt:`En esta conversacion llamada "req.random();".
Usaremos unicamente este contexto "req.contexto()".
Genera un JSON valido que incluya "preguntas" y dentro agregale "req.numeroPreguntas();" "pregunta" y a cada "pregunta" agregale en desorden "req.numeroOpciones();" "opciones", de las "opciones" generadas agrega la correcta en "resCorrecta".`}},h=()=>{const[o,n]=s.useState(""),[t,c]=s.useState(1);return e.jsxs("div",{className:"prompt_examenes",children:[e.jsx("h1",{children:"Configuraciones de Prompts"}),e.jsx("div",{className:"flex-blocks-edit-orques2",children:Object.entries(u).map(([a,{name:l,prompt:i}])=>e.jsx("div",{children:e.jsxs("div",{className:"btn-block-ask2",children:[e.jsx("input",{value:i,id:a,onChange:r=>n(r==null?void 0:r.target.value),type:"radio",name:"typePrompt"}),e.jsx("label",{htmlFor:a,children:e.jsx("span",{children:l})})]})},a))}),e.jsx("div",{className:"title-prompt",children:e.jsx("p",{children:"Prompt"})}),e.jsx("textarea",{value:o,onChange:a=>n(a==null?void 0:a.target.value)}),e.jsxs("div",{className:"btn-prompt",children:[e.jsx("button",{title:"Restablecer",name:"Restablecer",children:e.jsx(m,{size:22})}),e.jsx("button",{title:"Guardar",name:"Guardar",children:e.jsx(d,{size:22})})]}),e.jsxs("div",{className:"alert-prompt",children:[e.jsx("p",{children:"Para el correcto funcionamiento del prompt debe declarar las funciones:"}),e.jsxs("p",{children:['"req.contexto()"'," ",'"req.numeroPreguntas()"'," ",'"req.numeroOpciones()"']})]}),e.jsx("h1",{children:"Configuración del Modelo "}),e.jsx("section",{className:"section-temperatura",children:e.jsxs("article",{children:[e.jsx("label",{htmlFor:"temp",children:"Temperatura | Creatividad del modelo"}),e.jsx("input",{id:"temp",type:"range",name:"range",min:"1",max:"8",step:"1",list:"listemp",value:t,onChange:a=>c(parseInt(a.target.value))}),e.jsxs("span",{children:[" 0.",t]})]})})]})};export{h as default};
